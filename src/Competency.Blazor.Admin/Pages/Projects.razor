@page "/Projects"
@using Competency.Core.CompetencyAggregate.Entities
@using Competency.Core.CompetencyAggregate
@using Competency.SharedKernel
@using Competency.Blazor.Shared.Interfaces.Competency

@inject IProjectsService _projectsService;

@attribute [Authorize]

<MudTable ServerData="@(new Func<TableState, Task<TableData<Project>>>(ServerReload))"
          Dense="true" Hover="true" @ref="table">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Projects</MudText>
        <MudSpacer />
        <MudTextField T="string" ValueChanged="@(OnSearch)" Placeholder="Search" Adornment="Adornment.Start"
                      AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh><MudTableSortLabel SortLabel="Number" T="string">Project Number</MudTableSortLabel></MudTh>
        <MudTh><MudTableSortLabel SortLabel="Name" T="string">Name</MudTableSortLabel></MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ProjectNumber">@context.ProjectNumber</MudTd>
        <MudTd DataLabel="Name">@context.Name</MudTd>
    </RowTemplate>
    <NoRecordsContent>
        <MudText>No matching records found</MudText>
    </NoRecordsContent>
    <LoadingContent>
        <MudText>Loading...</MudText>
    </LoadingContent>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>


@code {
    private IEnumerable<Project> pagedData;
    private MudTable<Project> table;
    private PagedList<Project> _projects = PagedList<Project>.Empty(1, 0);
    
    private int totalItems;
    private string searchString = null;
    
    private async Task<TableData<Project>> ServerReload(TableState state)
    {
        var parameters = new CompetencyParameters(state.PageSize, state.Page, searchString);
        var data = await _projectsService.GetList(parameters);
    
        return new TableData<Project>() {Items = data.Items, TotalItems = data.TotalCount};
    }

    private void OnSearch(string text)
    {
        searchString = text;
        table.ReloadServerData();
    }

}